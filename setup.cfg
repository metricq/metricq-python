[metadata]
name = metricq
version = 1.2.0
author = TU Dresden
description = A highly-scalable, distributed metric data processing framework based on RabbitMQ
long_description = file: README.md
url = https://github.com/metricq/metricq-python
license = BSD 3-clause "New" or "Revised License"
license_file = LICENSE
classifiers =
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3

[options]
packages =
    metricq
    metricq_proto
package_dir =
    metricq_proto = lib/metricq-protobuf
python_requires = >=3.6

# For runtime dependencies (install_requires), see setup.py.
# We need to dynamically determine a protobuf version, so we
# cannot put these dependencies here.

[options.extras_require]
examples =
    aiomonitor
    click
    click-log
    click-completion
lint =
    black == 20.8b1
    flake8
    isort ~= 5.0
    check-manifest
    pre-commit
test =
    pytest
    pytest-asyncio
dev =
    %(test)s
    %(lint)s
    %(examples)s
    tox

[flake8]
application-import-names =
    metricq,
    tests,
    examples
extend-exclude =
    *_pb2.py,
    build
show-source = True
statistics = True
select =
    # Regular flake8 rules
    C, E, F, W
    # pep8-naming rules
    N
ignore =
    # E203: whitespace before ':' (not PEP8 compliant)
    E203
    # E501: line too long (black does that)
    E501
    # W503: line break before binary operator (not PEP8 compliant)
    W503

[tox:tox]
envlist =
    pytest
    black
    isort
    check-manifest


[testenv:pytest]
deps = .[test]
commands =
    pytest \
        --basetemp={envtmpdir} \
        {posargs}

[testenv:black]
deps = .[lint]
commands = black --check .

[testenv:isort]
deps = .[lint]
commands = isort --diff --check .

[testenv:check-manifest]
deps = .[lint]
commands = check-manifest

[testenv:flake8]
deps = .[lint]
commands = flake8 .
